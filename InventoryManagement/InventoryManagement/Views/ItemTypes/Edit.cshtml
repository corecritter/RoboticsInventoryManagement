@model InventoryManagement.Models.ItemTypesViewModel

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Items</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ItemTypeModel.ItemTypeId)
        @Html.HiddenFor(model => model.ItemTypeModel.HasLabel)
        <div class="row">
            <div class="col-sm-2"> 
                @Html.LabelFor(model => model.ItemTypeModel.ItemName)
            </div>
            <div class="col-sm-3">
                @Html.EditorFor(model => model.ItemTypeModel.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemTypeModel.ItemName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-lg-2">
                @Html.ActionLink("Add Item", "AddItem", new { itemTypeId = Model.ItemTypeModel.ItemTypeId })
            </div>
        </div>
                @if (Model.ItemTypeModel.HasLabel)
                {

                    for (int i = 0; i < Model.ItemsModel.Count; i++)
                    {
                        @Html.HiddenFor(model => model.ItemsModel[i].ItemTypeId)
                        @Html.HiddenFor(model => model.ItemsModel[i].ItemId)
                        @Html.HiddenFor(model => model.ItemsModel[i].IsReturned)
                        @Html.HiddenFor(model => model.ItemsModel[i].BundleId)
                        @Html.HiddenFor(model => model.ItemsModel[i].CheckedInById)
                        @Html.HiddenFor(model => model.ItemsModel[i].CheckedOutById)
                        if (Request.Browser.IsMobileDevice)
                        {
                            <div class="row">
                                <div class="col-xs-5">
                                    @Html.LabelFor(model => model.InventoryLocations) @Html.DropDownListFor(model => model.ItemsModel[i].InventoryLocationId, Model.InventoryLocations[i])
                                </div>
                                <div class="col-xs-4">
                                    @Html.LabelFor(model => model.Labels) @Html.DropDownListFor(model => model.ItemsModel[i].LabelId, Model.Labels[i]) 
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-1">
                                    @Html.ActionLink("Delete", "DeleteItem", new { itemId = Model.ItemsModel[i].ItemId })
                                </div>
                            </div>
                            <hr />
                        }
                        else
                        {
                            <div class="row">
                                <div class="col-xs-5">
                                    @Html.LabelFor(model => model.InventoryLocations) @Html.DropDownListFor(model => model.ItemsModel[i].InventoryLocationId, Model.InventoryLocations[i])
                                </div>
                                <div class="col-xs-5">
                                    @Html.LabelFor(model => model.Labels) @Html.DropDownListFor(model => model.ItemsModel[i].LabelId, Model.Labels[i])
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xs-1">
                                    @Html.ActionLink("Delete", "DeleteItem", new { itemId = Model.ItemsModel[i].ItemId })
                                </div>
                            </div>
                            <hr />
                        }

                    }
                }
                else
                {
                    <div class="form-group">
                        @for (int i = 0; i < Model.ItemsModel.Count(); i++)
                        {
                            @Html.HiddenFor(model => model.ItemsModel[i].ItemTypeId)
                            @Html.HiddenFor(model => model.ItemsModel[i].ItemId)
                            @Html.HiddenFor(model => model.ItemsModel[i].IsReturned)
                            @Html.HiddenFor(model => model.ItemsModel[i].BundleId)
                            @Html.HiddenFor(model => model.ItemsModel[i].CheckedInById)
                            @Html.HiddenFor(model => model.ItemsModel[i].CheckedOutById)
                            if (Request.Browser.IsMobileDevice)
                            {
                                <div class="row">
                                    <div class="col-xs-5">
                                        @Html.LabelFor(model => model.InventoryLocations)
                                    </div>
                                    <div class="col-xs-5">
                                        @Html.DropDownListFor(model => model.ItemsModel[i].InventoryLocationId, Model.InventoryLocations[i])
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-xs-1">
                                        @Html.ActionLink("Delete", "DeleteItem", new { itemId = Model.ItemsModel[i].ItemId })
                                    </div>
                                </div>
                                <hr />
                            }
                            else
                            {
                                <div class="row">
                                    <div class="col-md-2">
                                        @Html.LabelFor(model => model.InventoryLocations)
                                    </div>
                                    <div class="col-md-4">
                                        @Html.DropDownListFor(model => model.ItemsModel[i].InventoryLocationId, Model.InventoryLocations[i])@Html.ActionLink("Delete", "DeleteItem", new { itemId = Model.ItemsModel[i].ItemId })
                                    </div>
                                </div>
                                
                            }
                        }
                    </div>
                }



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
