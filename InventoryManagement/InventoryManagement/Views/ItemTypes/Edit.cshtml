@model InventoryManagement.Controllers.ItemTypesViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ItemTypes</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ItemTypeModel.ItemTypeId)

        <div class="form-group">
            @Html.LabelFor(model => model.ItemTypeModel.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemTypeModel.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemTypeModel.ItemName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemTypeModel.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemTypeModel.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemTypeModel.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            
            @for (int i = 0; i < Model.ItemTypeModel.Item.Count(); i++)
            {
                @Html.HiddenFor(model => model.ItemTypeModel.Item[i].ItemTypeId)
                @Html.HiddenFor(model => model.ItemTypeModel.Item[i].ItemId)
                @Html.DropDownListFor(model => model.ItemTypeModel.Item[i].InventoryLocationId, Model.InventoryLocations)


            }

            @* for (int i = 0; i < Model.ItemsModel.Count(); i++)
    {
                @Html.HiddenFor(item => Model.ItemsModel[i].ItemId)
            @Html.DropDownListFor(InventoryLocationId => Model.ItemsModel[i].InventoryLocationId, Model.InventoryLocations)
            @Html.DropDownListFor(LabelId => Model.ItemsModel[i].LabelId, Model.Labels)
                < br />
            }*@
            

            <!--
            Html.EditorFor(model => model.ItemsModel)
            {
                Html.DropDownListFor(selIndex => selIndex.selectedValue, Model.InventoryLocations)
                Html.DropDownListFor(selIndex => selIndex.selectedLabel, Model.Labels)
                <br />
            }
                -->
        </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
